/*!
 * Mvc.Grid 7.2.0
 *
 * Copyright Â© NonFactors
 *
 * Licensed under the terms of the MIT License
 * https://www.opensource.org/licenses/mit-license.php
 */
class MvcGrid{constructor(n,t={}){const i=this,r=i.findGrid(n);if(r.dataset.id)return MvcGrid.instances[parseInt(r.dataset.id)].set(t);i.columns=[];i.element=r;i.loadingDelay=300;i.loadingTimerId=0;i.name=r.dataset.name;i.controller=new AbortController;i.isAjax=Boolean(r.dataset.url);i.prefix=i.name?`${i.name}-`:"";i.filterMode=(r.dataset.filterMode||"").toLowerCase();r.dataset.id=t.id||MvcGrid.instances.length.toString();i.url=r.dataset.url?new URL(r.dataset.url,location.href):new URL(location.href);i.url=t.url?new URL(t.url.toString(),location.href):i.url;i.url=t.query?new URL(`?${t.query}`,i.url.href):i.url;i.sort=i.buildSort();i.filters={"default":MvcGridFilter,date:MvcGridDateFilter,guid:MvcGridGuidFilter,text:MvcGridTextFilter,number:MvcGridNumberFilter};const u=r.querySelector(".mvc-grid-headers"),e=r.querySelectorAll(".mvc-grid-row-filters th");if(u)for(const[n,t]of u.querySelectorAll("th").entries())i.columns.push(new MvcGridColumn(i,t,e[n]));const f=r.querySelector(".mvc-grid-pager");return f&&(i.pager=new MvcGridPager(i,f)),i.set(t),i.cleanUp(),i.bind(),t.id?MvcGrid.instances[parseInt(t.id)]=i:MvcGrid.instances.push(i),r.children.length||i.reload(),this}set(n){const t=this;t.loadingDelay=typeof n.loadingDelay=="undefined"?t.loadingDelay:n.loadingDelay;t.url=n.url?new URL(n.url.toString(),location.href):t.url;t.url=n.query?new URL(`?${n.query}`,t.url.href):t.url;t.isAjax=typeof n.isAjax=="boolean"?n.isAjax:t.isAjax;t.filters=Object.assign(t.filters,n.filters);for(const n of t.columns)n.filter&&t.filters[n.filter.name]&&(n.filter.instance=new t.filters[n.filter.name](n),n.filter.instance.init());return t}showConfiguration(n){MvcGridPopup.showConfiguration(this,n)}getConfiguration(){return{name:this.name,columns:this.columns.map(n=>({name:n.name,hidden:n.isHidden,width:n.header.style.width}))}}configure(n){n.columns.forEach((n,t)=>{const r=this.element.querySelectorAll("tr"),i=this.columns.findIndex(t=>t.name.toLowerCase()===n.name.toLowerCase());if(i>=0){this.columns[i].isHidden=n.hidden;n.width.trim()&&(this.columns[i].header.style.width=n.width.split(";",2)[0]);for(const u of r)n.hidden?u.children[i].classList.add("mvc-grid-hidden"):u.children[i].classList.remove("mvc-grid-hidden"),i!==t&&u.insertBefore(u.children[i],u.children[t]);this.columns.splice(i-(t<i?1:0),0,this.columns.splice(t,1)[0])}})}reload(){const n=this;if(n.element.dispatchEvent(new CustomEvent("reloadstart",{detail:{grid:n},bubbles:!0})),n.isAjax){const t=new URL(n.url.href);if(n.controller.abort(),MvcGridPopup.lastActiveElement=null,n.controller=new AbortController,n.loadingDelay!==null){const t=`<td colspan="${n.columns.length}"><div class="mvc-grid-loader"><div class="mvc-grid-spinner"></div></div></td>`;clearTimeout(n.loadingTimerId);n.loadingTimerId=setTimeout(()=>{for(const i of n.element.querySelectorAll("tbody > tr"))i.innerHTML=t},n.loadingDelay)}MvcGridPopup.hide();fetch(t.href,{signal:n.controller.signal,headers:{"X-Requested-With":"XMLHttpRequest"}}).then(n=>{if(!n.ok)throw new Error(`Invalid response status: ${n.status}`);return n.text()}).then(t=>{const i=n.element.parentElement,r=document.createElement("template"),f=Array.from(i.children).indexOf(n.element);if(r.innerHTML=t.trim(),r.content.firstElementChild.classList.contains("mvc-grid"))n.element.outerHTML=t;else throw new Error("Grid partial should only include grid declaration.");const u=new MvcGrid(i.children[f],{loadingDelay:n.loadingDelay,id:n.element.dataset.id,filters:n.filters,isAjax:n.isAjax,url:n.url});u.element.dispatchEvent(new CustomEvent("reloadend",{detail:{grid:u},bubbles:!0}))}).catch(t=>{if(t.name==="AbortError")return Promise.resolve();const i=!n.element.dispatchEvent(new CustomEvent("reloadfail",{detail:{grid:n,reason:t},cancelable:!0,bubbles:!0}));return i?Promise.resolve():Promise.reject(t)})}else location.href=n.url.href}buildSort(){const t=new Map,i=/(^|,)(.*?) (asc|desc)(?=$|,)/g,r=this.url.searchParams.get(`${this.prefix}sort`)||"";let n=i.exec(r);while(n)t.set(n[2],n[3]),n=i.exec(r);return t}findGrid(n){const t=n.closest(".mvc-grid");if(!t)throw new Error("Grid can only be created from within mvc-grid structure.");return t}cleanUp(){delete this.element.dataset.filterMode;delete this.element.dataset.url}bind(){const n=this;for(const t of n.element.querySelectorAll("tbody > tr:not(.mvc-grid-empty-row)"))t.addEventListener("click",function(i){const r={};for(const[i,u]of n.columns.entries()){if(t.cells.length<=i)return;r[u.name]=t.cells[i].innerText}this.dispatchEvent(new CustomEvent("rowclick",{detail:{grid:n,data:r,originalEvent:i},bubbles:!0}))})}}MvcGrid.instances=[];MvcGrid.lang={"default":{equals:"Equals","not-equals":"Not equals"},text:{contains:"Contains",equals:"Equals","not-equals":"Not equals","starts-with":"Starts with","ends-with":"Ends with"},number:{equals:"Equals","not-equals":"Not equals","less-than":"Less than","greater-than":"Greater than","less-than-or-equal":"Less than or equal","greater-than-or-equal":"Greater than or equal"},date:{equals:"Equals","not-equals":"Not equals","earlier-than":"Earlier than","later-than":"Later than","earlier-than-or-equal":"Earlier than or equal","later-than-or-equal":"Later than or equal"},guid:{equals:"Equals","not-equals":"Not equals"},filter:{apply:"&#10003;",remove:"&#10008;"},operator:{select:"",and:"and",or:"or"}};class MvcGridColumn{constructor(n,t,i){const r=this,u=t.dataset;r.grid=n;r.header=t;r.name=u.name||"";r.isHidden=t.classList.contains("mvc-grid-hidden");r.filter=u.filter?new MvcGridColumnFilter(r,i):null;r.sort=t.classList.contains("sortable")?new MvcGridColumnSort(r):null;r.cleanUp()}cleanUp(){const n=this.header.dataset;delete n.filterDefaultMethod;delete n.filterApplied;delete n.filterType;delete n.filter;delete n.sortFirst;delete n.sort;delete n.name}}class MvcGridColumnSort{constructor(n){const t=this;t.column=n;t.button=n.header.querySelector(".mvc-grid-sort");t.order=(n.header.dataset.sort||"").toLowerCase();t.first=(n.header.dataset.sortFirst||"asc").toLowerCase();t.bind()}toggle(n){const t=this,i=t.column.grid,r=t.column.grid.sort,u=i.url.searchParams;t.order=t.order===t.first?t.order==="asc"?"desc":"asc":t.order?"":t.first;n||r.clear();t.order?r.set(t.column.name,t.order):r.delete(t.column.name);const f=Array.from(r).map(n=>n.join(" ")).join(",");u.delete(`${i.prefix}sort`);f&&u.set(`${i.prefix}sort`,f);i.reload()}bind(){const n=this,t=n.column;t.header.addEventListener("click",i=>{t.filter&&t.grid.filterMode==="header"||/mvc-grid-(sort|filter)/.test(i.target.className)||n.toggle(i.ctrlKey||i.shiftKey)});n.button.addEventListener("click",t=>{n.toggle(t.ctrlKey||t.shiftKey)})}}class MvcGridColumnFilter{constructor(n,t){const u=[],o=[],i=this,f=n.header.dataset,s=n.grid.url.searchParams,e=`${n.grid.prefix+n.name}-`;let r=n.header.querySelector(".mvc-grid-options");n.grid.filterMode==="row"&&(r=t.querySelector("select"));r&&r.classList.contains("mvc-grid-options")&&r.parentElement.removeChild(r);for(const n of s.entries())n[0]!==`${e}op`&&n[0].startsWith(e)&&(o.push(n[0].substring(e.length)),u.push(n[1]));i.column=n;i.rowFilter=t;i.name=f.filter||"default";i.isApplied=f.filterApplied==="True";i.defaultMethod=f.filterDefaultMethod||"";i.type=(f.filterType||"single").toLowerCase();i.options=r&&r.children.length>0?r:null;i.button=(t||n.header).querySelector(".mvc-grid-filter");i.inlineInput=t?t.querySelector(".mvc-grid-value"):null;i.first={method:o[0]||"",values:i.type==="multi"?u:u.slice(0,1)};i.operator=i.type==="double"?s.get(`${e}op`)||"":"";i.second={method:i.type==="double"?o[1]||"":"",values:i.type==="double"?u.slice(1,2):[]};this.bind()}apply(){const i=this.column.grid,n=i.url.searchParams,t=this.column.grid.prefix,r=n.get(`${t}sort`);for(const r of i.columns)for(const i of[...n.keys()])i.startsWith(`${t+r.name}-`)&&n.delete(i);n.delete(`${t}sort`);n.delete(`${t}page`);n.delete(`${t}rows`);for(const r of i.columns.filter(n=>n.filter&&(n===this.column||n.filter.isApplied||n.filter.first.values[0]))){const u=r.filter;n.set(`${t+r.name}-${u.first.method}`,u.first.values[0]||"");for(let i=1;u.type==="multi"&&i<u.first.values.length;i++)n.append(`${t+r.name}-${u.first.method}`,u.first.values[i]||"");i.filterMode==="excel"&&u.type==="double"&&(n.set(`${t+r.name}-op`,u.operator||""),n.append(`${t+r.name}-${u.second.method}`,u.second.values[0]||""))}r&&n.set(`${t}sort`,r);i.pager&&i.pager.showPageSizes&&n.set(`${t}rows`,i.pager.rowsPerPage.value);i.reload()}cancel(){const n=this,r=n.column,t=n.column.grid,i=t.url.searchParams;if(n.isApplied){i.delete(`${t.prefix}page`);i.delete(`${t.prefix}rows`);for(const n of[...i.keys()])n.startsWith(`${t.prefix+r.name}-`)&&i.delete(n);t.reload()}else n.first.values=[],n.second.values=[],r.grid.filterMode!=="excel"&&(n.inlineInput.value=""),MvcGridPopup.hide()}bind(){const n=this,i=n.column,t=i.grid.filterMode;n.button.addEventListener("click",()=>{MvcGridPopup.show(n)});n.options?t==="row"&&n.type!=="multi"?n.inlineInput.addEventListener("change",function(){n.first.values=[this.value];i.filter.apply()}):(t==="header"||t==="row")&&n.inlineInput.addEventListener("click",function(){this.selectionStart===this.selectionEnd&&MvcGridPopup.show(n)}):t!=="excel"&&(n.inlineInput.addEventListener("input",function(){n.first.values=[this.value];n.instance.validate(this)}),n.inlineInput.addEventListener("keyup",function(t){t.key==="Enter"&&n.instance.isValid(this.value)&&i.filter.apply()}))}}class MvcGridPager{constructor(n,t){const i=this;i.grid=n;i.element=t;i.totalRows=parseInt(t.dataset.totalRows);i.pages=n.element.querySelectorAll("[data-page]");i.showPageSizes=t.dataset.showPageSizes==="True";i.rowsPerPage=t.querySelector(".mvc-grid-pager-rows");i.currentPage=i.pages.length?parseInt(t.querySelector(".active").dataset.page):1;i.cleanUp();i.bind()}apply(n,t){const i=this.grid,r=i.url.searchParams;r.delete(`${i.prefix}page`);r.delete(`${i.prefix}rows`);r.set(`${i.prefix}page`,n);this.showPageSizes&&r.set(`${i.prefix}rows`,typeof t=="string"?t:this.rowsPerPage.value);i.reload()}cleanUp(){delete this.element.dataset.showPageSizes;delete this.element.dataset.totalPages;delete this.element.dataset.totalRows}bind(){const n=this;for(const t of n.pages)t.addEventListener("click",function(){n.apply(this.dataset.page)});n.grid.element.querySelectorAll(".mvc-grid-pager-rows").forEach(t=>{t.addEventListener("change",function(){const t=parseInt(this.value);if(!isNaN(t)&&t>=0){const i=t===0?1:Math.ceil(n.totalRows/t);n.apply(Math.min(n.currentPage,i).toString(),t.toString())}})})}}class MvcGridPopup{static showConfiguration(n,t){const i=this;i.lastActiveElement=document.activeElement;i.element.className="mvc-grid-popup mvc-grid-configuration";i.element.innerHTML=`<div class="popup-arrow"></div><div class="popup-content"></div>`;const r=i.element.querySelector(".popup-content");r.appendChild(i.createDropzone());for(const t of n.columns)r.appendChild(i.createPreference(t)),r.appendChild(i.createDropzone());n.columns.length&&document.body.appendChild(i.element);i.reposition(n,t);i.bind()}static show(n){if(n.instance){const t=this,i=n.instance;t.lastActiveElement=document.activeElement;t.element.className=`mvc-grid-popup ${i.cssClasses}`.trim();t.element.innerHTML=`<div class="popup-arrow"></div><div class="popup-content">${i.render()}</div>`;document.body.appendChild(t.element);t.bind();t.setValues(n);t.reposition(n.column.grid,n.button);i.bindOperator();i.bindMethods();i.bindValues();i.bindActions();t.element.querySelector(".mvc-grid-value").focus()}}static hide(n){const t=MvcGridPopup,i=n&&n.target,r=t.element.parentNode,u=!(i&&i.closest(".mvc-grid-popup,.mvc-grid-filter"));r&&u&&(document.body.removeChild(t.element),t.lastActiveElement&&(t.lastActiveElement.focus(),t.lastActiveElement=null))}static setValues(n){const t=this;t.setValue(`.mvc-grid-operator`,[n.operator]);t.setValue(`.mvc-grid-value[data-filter="first"]`,n.first.values);t.setValue(`.mvc-grid-value[data-filter="second"]`,n.second.values);t.setValue(`.mvc-grid-method[data-filter="first"]`,[n.first.method]);t.setValue(`.mvc-grid-method[data-filter="second"]`,[n.second.method])}static setValue(n,t){const i=this.element.querySelector(n);if(i)if(i.tagName==="SELECT"&&i.multiple)for(const n of Array.from(i.options))n.selected=t.indexOf(n.value)>=0;else i.value=t[0]||""}static createPreference(n){const r=this,u=document.createElement("span"),i=document.createElement("input"),t=document.createElement("label");return i.type="checkbox",t.draggable=!0,t.className="mvc-grid-column",u.innerText=n.filter&&n.filter.inlineInput?n.filter.inlineInput.placeholder:n.header.innerText.trim(),i.checked=!n.isHidden,i.addEventListener("change",()=>{const t=n.grid.columns.indexOf(n);for(const r of n.grid.element.querySelectorAll("tr"))i.checked?r.children[t].classList.remove("mvc-grid-hidden"):r.children[t].classList.add("mvc-grid-hidden");n.isHidden=!i.checked;n.grid.element.dispatchEvent(new CustomEvent("gridconfigure",{detail:{grid:n.grid},bubbles:!0}))}),t.addEventListener("dragstart",()=>{r.draggedColumn=n,r.draggedElement=t,t.style.opacity="0.4",t.parentElement.classList.add("mvc-grid-dragging")}),t.addEventListener("dragend",()=>{r.draggedColumn=null,r.draggedElement=null,t.style.opacity="",t.parentElement.classList.remove("mvc-grid-dragging")}),t.appendChild(i),t.appendChild(u),t}static createDropzone(){const n=document.createElement("div");return n.className="mvc-grid-dropzone",n.addEventListener("dragenter",()=>{n.classList.add("hover")}),n.addEventListener("dragover",n=>{n.preventDefault()}),n.addEventListener("dragleave",()=>{n.classList.remove("hover")}),n.addEventListener("drop",()=>{const i=this,r=i.draggedElement,t=i.draggedColumn.grid;if(n!==r.previousElementSibling&&n!==r.nextElementSibling){const u=Array.from(i.element.querySelectorAll(".mvc-grid-dropzone")).indexOf(n),f=t.columns.indexOf(i.draggedColumn);n.parentElement.insertBefore(r.previousElementSibling,n);n.parentElement.insertBefore(r,n);for(const n of t.element.querySelectorAll("tr"))n.insertBefore(n.children[f],n.children[u]);t.columns.splice(u-(f<u?1:0),0,t.columns.splice(f,1)[0]);t.element.dispatchEvent(new CustomEvent("gridconfigure",{detail:{grid:t},bubbles:!0}))}n.classList.remove("hover")}),n}static reposition(n,t){const r=this.element,i=getComputedStyle(r),f=r.querySelector(".popup-arrow");let{top:e,left:u}=(t||n.element).getBoundingClientRect();if(e+=window.scrollY-parseFloat(i.borderTopWidth),u+=window.scrollX-parseFloat(i.borderLeftWidth),t){u-=parseFloat(i.marginLeft)-t.offsetWidth/2+26;const o=26-parseFloat(getComputedStyle(f).borderLeftWidth),s=parseFloat(i.marginLeft)+r.offsetWidth+parseFloat(i.marginRight),n=Math.max(0,u+s-window.scrollX-document.documentElement.clientWidth);e+=t.offsetHeight/3*2+f.offsetHeight-parseFloat(i.marginTop);f.style.left=`${Math.max(0,o+n)}px`;u-=n}r.style.left=`${Math.max(0,u)}px`;r.style.top=`${Math.max(0,e)}px`;f.style.display=t?"":"none"}static bind(){const n=this;window.addEventListener("mousedown",n.hide);window.addEventListener("touchstart",n.hide)}}MvcGridPopup.element=document.createElement("div");class MvcGridFilter{constructor(n){const t=this;t.column=n;t.type=n.filter.type;t.mode=n.grid.filterMode;t.methods=["equals","not-equals"];t.cssClasses="mvc-grid-default-filter"}init(){const t=this,i=t.column,n=i.filter;n.options||t.mode==="excel"||t.validate(n.inlineInput);n.first.method||(n.first.method=n.defaultMethod);n.second.method||(n.second.method=n.defaultMethod);t.methods.indexOf(n.first.method)<0&&(n.first.method=t.methods[0]);t.methods.indexOf(n.second.method)<0&&(n.second.method=t.methods[0])}isValid(n){return!n||!0}validate(n){this.isValid(n.value)?n.classList.remove("invalid"):n.classList.add("invalid")}render(){const n=this;return`<div class="popup-filter">
                    ${n.renderFilter("first")}
                </div>
                ${n.mode==="excel"&&n.type==="double"?`${n.renderOperator()}
                    <div class="popup-filter">
                        ${n.renderFilter("second")}
                    </div>`:""}
                ${n.renderActions()}`}renderFilter(n){const t=this,i=t.column.filter.options,r=MvcGrid.lang[t.column.filter.name]||{},u=t.type==="multi"?" multiple":"",f=t.methods.map(n=>`<option value="${n}">${r[n]||""}</option>`).join("");return`<div class="popup-group">
                    <select class="mvc-grid-method" data-filter="${n}">
                        ${f}
                    </select>
                </div>
                <div class="popup-group">${i?`<select class="mvc-grid-value" data-filter="${n}"${u}>
                          ${i.innerHTML}
                       </select>`:`<input class="mvc-grid-value" data-filter="${n}">`}
                </div>`}renderOperator(){const n=MvcGrid.lang.operator;return`<div class="popup-operator">
                    <div class="popup-group">
                        <select class="mvc-grid-operator">
                            <option value="">${n.select}</option>
                            <option value="and">${n.and}</option>
                            <option value="or">${n.or}</option>
                        </select>
                    </div>
                </div>`}renderActions(){const n=MvcGrid.lang.filter;return`<div class="popup-actions">
                    <button type="button" class="mvc-grid-apply" type="button">${n.apply}</button>
                    <button type="button" class="mvc-grid-cancel" type="button">${n.remove}</button>
                </div>`}bindOperator(){const t=this.column.filter,n=MvcGridPopup.element.querySelector(".mvc-grid-operator");n&&n.addEventListener("change",function(){t.operator=this.value})}bindMethods(){const n=this.column.filter;for(const t of MvcGridPopup.element.querySelectorAll(".mvc-grid-method"))t.addEventListener("change",function(){n[this.dataset.filter].method=this.value})}bindValues(){const n=this;for(const t of MvcGridPopup.element.querySelectorAll(".mvc-grid-value"))t.tagName==="SELECT"?t.addEventListener("change",()=>{const i=Array.from(t.options).filter(n=>n.selected);if(n.column.filter[t.dataset.filter].values=i.map(n=>n.value),n.mode!=="excel"){const r=n.column.filter.inlineInput;r.value=n.mode==="header"||n.type==="multi"?i.map(n=>n.text).join(", "):t.value;n.validate(r)}}):(t.addEventListener("input",()=>{if(n.column.filter[t.dataset.filter].values=[t.value],n.mode!=="excel"){const i=n.column.filter.inlineInput;i.value=n.column.filter[t.dataset.filter].values.join(", ");n.validate(i)}n.validate(t)}),t.addEventListener("keyup",function(t){t.key==="Enter"&&n.isValid(this.value)&&n.column.filter.apply()}),n.validate(t))}bindActions(){const n=this.column.filter,t=MvcGridPopup.element;t.querySelector(".mvc-grid-apply").addEventListener("click",n.apply.bind(n));t.querySelector(".mvc-grid-cancel").addEventListener("click",n.cancel.bind(n))}}class MvcGridTextFilter extends MvcGridFilter{constructor(n){super(n);this.cssClasses="mvc-grid-text-filter";this.methods=["contains","equals","not-equals","starts-with","ends-with"]}}class MvcGridNumberFilter extends MvcGridFilter{constructor(n){super(n);this.cssClasses="mvc-grid-number-filter";this.methods=["equals","not-equals","less-than","greater-than","less-than-or-equal","greater-than-or-equal"]}isValid(n){return!n||/^(?=.*\d+.*)[-+]?\d*[.,]?\d*$/.test(n)}}class MvcGridDateFilter extends MvcGridFilter{constructor(n){super(n);this.cssClasses="mvc-grid-date-filter";this.methods=["equals","not-equals","earlier-than","later-than","earlier-than-or-equal","later-than-or-equal"]}}class MvcGridGuidFilter extends MvcGridFilter{constructor(n){super(n);this.cssClasses="mvc-grid-guid-filter"}isValid(n){return!n||/^[0-9A-F]{8}-?([0-9A-F]{4}-?){3}[0-9A-F]{12}$/i.test(n)}}